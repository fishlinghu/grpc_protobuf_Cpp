// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vendor.proto

#ifndef PROTOBUF_vendor_2eproto__INCLUDED
#define PROTOBUF_vendor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace vendor {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_vendor_2eproto();
void protobuf_AssignDesc_vendor_2eproto();
void protobuf_ShutdownFile_vendor_2eproto();

class BidQuery;
class BidReply;

// ===================================================================

class BidQuery : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vendor.BidQuery) */ {
 public:
  BidQuery();
  virtual ~BidQuery();

  BidQuery(const BidQuery& from);

  inline BidQuery& operator=(const BidQuery& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidQuery& default_instance();

  void Swap(BidQuery* other);

  // implements Message ----------------------------------------------

  inline BidQuery* New() const { return New(NULL); }

  BidQuery* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidQuery& from);
  void MergeFrom(const BidQuery& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidQuery* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string product_name = 1;
  void clear_product_name();
  static const int kProductNameFieldNumber = 1;
  const ::std::string& product_name() const;
  void set_product_name(const ::std::string& value);
  void set_product_name(const char* value);
  void set_product_name(const char* value, size_t size);
  ::std::string* mutable_product_name();
  ::std::string* release_product_name();
  void set_allocated_product_name(::std::string* product_name);

  // @@protoc_insertion_point(class_scope:vendor.BidQuery)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr product_name_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_vendor_2eproto();
  friend void protobuf_AssignDesc_vendor_2eproto();
  friend void protobuf_ShutdownFile_vendor_2eproto();

  void InitAsDefaultInstance();
  static BidQuery* default_instance_;
};
// -------------------------------------------------------------------

class BidReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:vendor.BidReply) */ {
 public:
  BidReply();
  virtual ~BidReply();

  BidReply(const BidReply& from);

  inline BidReply& operator=(const BidReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BidReply& default_instance();

  void Swap(BidReply* other);

  // implements Message ----------------------------------------------

  inline BidReply* New() const { return New(NULL); }

  BidReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BidReply& from);
  void MergeFrom(const BidReply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BidReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  double price() const;
  void set_price(double value);

  // optional string vendor_id = 2;
  void clear_vendor_id();
  static const int kVendorIdFieldNumber = 2;
  const ::std::string& vendor_id() const;
  void set_vendor_id(const ::std::string& value);
  void set_vendor_id(const char* value);
  void set_vendor_id(const char* value, size_t size);
  ::std::string* mutable_vendor_id();
  ::std::string* release_vendor_id();
  void set_allocated_vendor_id(::std::string* vendor_id);

  // @@protoc_insertion_point(class_scope:vendor.BidReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double price_;
  ::google::protobuf::internal::ArenaStringPtr vendor_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_vendor_2eproto();
  friend void protobuf_AssignDesc_vendor_2eproto();
  friend void protobuf_ShutdownFile_vendor_2eproto();

  void InitAsDefaultInstance();
  static BidReply* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BidQuery

// optional string product_name = 1;
inline void BidQuery::clear_product_name() {
  product_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BidQuery::product_name() const {
  // @@protoc_insertion_point(field_get:vendor.BidQuery.product_name)
  return product_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidQuery::set_product_name(const ::std::string& value) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vendor.BidQuery.product_name)
}
inline void BidQuery::set_product_name(const char* value) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vendor.BidQuery.product_name)
}
inline void BidQuery::set_product_name(const char* value, size_t size) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vendor.BidQuery.product_name)
}
inline ::std::string* BidQuery::mutable_product_name() {
  
  // @@protoc_insertion_point(field_mutable:vendor.BidQuery.product_name)
  return product_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidQuery::release_product_name() {
  // @@protoc_insertion_point(field_release:vendor.BidQuery.product_name)
  
  return product_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidQuery::set_allocated_product_name(::std::string* product_name) {
  if (product_name != NULL) {
    
  } else {
    
  }
  product_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_name);
  // @@protoc_insertion_point(field_set_allocated:vendor.BidQuery.product_name)
}

// -------------------------------------------------------------------

// BidReply

// optional double price = 1;
inline void BidReply::clear_price() {
  price_ = 0;
}
inline double BidReply::price() const {
  // @@protoc_insertion_point(field_get:vendor.BidReply.price)
  return price_;
}
inline void BidReply::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:vendor.BidReply.price)
}

// optional string vendor_id = 2;
inline void BidReply::clear_vendor_id() {
  vendor_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BidReply::vendor_id() const {
  // @@protoc_insertion_point(field_get:vendor.BidReply.vendor_id)
  return vendor_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidReply::set_vendor_id(const ::std::string& value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:vendor.BidReply.vendor_id)
}
inline void BidReply::set_vendor_id(const char* value) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:vendor.BidReply.vendor_id)
}
inline void BidReply::set_vendor_id(const char* value, size_t size) {
  
  vendor_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:vendor.BidReply.vendor_id)
}
inline ::std::string* BidReply::mutable_vendor_id() {
  
  // @@protoc_insertion_point(field_mutable:vendor.BidReply.vendor_id)
  return vendor_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BidReply::release_vendor_id() {
  // @@protoc_insertion_point(field_release:vendor.BidReply.vendor_id)
  
  return vendor_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BidReply::set_allocated_vendor_id(::std::string* vendor_id) {
  if (vendor_id != NULL) {
    
  } else {
    
  }
  vendor_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vendor_id);
  // @@protoc_insertion_point(field_set_allocated:vendor.BidReply.vendor_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace vendor

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vendor_2eproto__INCLUDED
